# Generated by Django 3.0.7 on 2020-10-31 02:49

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Hotel',
            fields=[
                ('idHotel', models.AutoField(help_text='ID único para Hotel', primary_key=True, serialize=False)),
                ('nombreHotel', models.DateTimeField(help_text='nombre de Hotel donde se hospedará', verbose_name='Nombre')),
                ('ciudadHotel', models.DateTimeField(help_text='nombre de la ciudad del Hotel', verbose_name='Ciudad')),
                ('telefonoHotel', models.DateTimeField(help_text='ID único para Hotel', verbose_name='Telefono')),
                ('estadoVuelo', models.BooleanField(default=True, verbose_name='estado')),
            ],
            options={
                'ordering': ['idHotel'],
            },
        ),
        migrations.CreateModel(
            name='Paquete',
            fields=[
                ('idPaquete', models.AutoField(help_text='ID único para este Paquete', primary_key=True, serialize=False)),
                ('tituloPaquete', models.CharField(blank=True, max_length=250, null=True, verbose_name='titulo del paquete')),
                ('nDiasPaquete', models.CharField(blank=True, choices=[('0', '0 '), ('1', '1 '), ('2', '2 '), ('3', '3 '), ('4', '4 '), ('5', '5 '), ('6', '6 '), ('7', '7 '), ('8', '8 '), ('9', '9 '), ('10', '10 '), ('11', '11 '), ('12', '12 '), ('13', '13 '), ('14', '14 '), ('15', '15 '), ('16', '16 '), ('17', '17 '), ('18', '18 '), ('19', '19 '), ('20', '20 ')], default='0', max_length=2, verbose_name='Cantidad de días')),
                ('nNochesPaquete', models.CharField(blank=True, choices=[('0', '0 '), ('1', '1 '), ('2', '2 '), ('3', '3 '), ('4', '4 '), ('5', '5 '), ('6', '6 '), ('7', '7 '), ('8', '8 '), ('9', '9 '), ('10', '10 '), ('11', '11 '), ('12', '12 '), ('13', '13 '), ('14', '14 '), ('15', '15 '), ('16', '16 '), ('17', '17 '), ('18', '18 '), ('19', '19 '), ('20', '20 ')], default='0', max_length=2, verbose_name='Cantidad de noches')),
                ('nHorasPaquete', models.CharField(blank=True, choices=[('0', '0 '), ('1', '1 '), ('2', '2 '), ('3', '3 '), ('4', '4 '), ('5', '5 '), ('6', '6 '), ('7', '7 '), ('8', '8 '), ('9', '9 '), ('10', '10 '), ('11', '11 '), ('12', '12 '), ('13', '13 '), ('14', '14 '), ('15', '15 '), ('16', '16 '), ('17', '17 '), ('18', '18 '), ('19', '19 '), ('20', '20 '), ('21', '21 '), ('22', '22 '), ('23', '23 '), ('24', '24 ')], default='0', max_length=2, verbose_name='Cantidad de Horas')),
                ('tipoMonedaPaquete', models.CharField(blank=True, choices=[('s', 'Soles'), ('d', 'Dólares')], default='s', help_text='Un solo Dia', max_length=1, verbose_name='Tipo de moneda')),
                ('precioPaquete', models.DecimalField(blank=True, decimal_places=2, default=500.0, help_text='Precio en soles o dólares', max_digits=8, null=True, verbose_name='Precio')),
                ('unidadPorPrecioPaquete', models.CharField(blank=True, choices=[('p', 'por persona')], default='p', max_length=1, null=True, verbose_name='Unidad por precio')),
                ('edadMinimaPaquete', models.PositiveIntegerField(blank=True, default=5, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(18)])),
                ('visitasPaquete', models.IntegerField(blank=True, default=0, null=True, verbose_name='Visitas')),
                ('mesPaquete', models.CharField(blank=True, choices=[('Enero', 'Enero'), ('Febrero', 'Febrero'), ('Marzo', 'Marzo'), ('Abril', 'Abril'), ('Mayo', 'Mayo'), ('Junio', 'Junio'), ('Julio', 'Julio'), ('Agosto', 'Agosto'), ('Septiembre', 'Septiembre'), ('Octubre', 'Octubre'), ('Noviembre', 'Noviembre'), ('Diciembre', 'Diciembre'), ('Todos los meses', 'Todos los meses')], default='Todos los meses', max_length=15, verbose_name='Mes de Disponiblidad')),
                ('disponibilidadPaquete', models.PositiveSmallIntegerField(default=150, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='Numero de Cupos')),
                ('imagenPrincipal', models.ImageField(blank=True, null=True, upload_to='img/paquetes/', verbose_name='Imagen de Fondo')),
                ('imagenAvatar', models.ImageField(blank=True, null=True, upload_to='img/paquetes/', verbose_name='Imagen Pequeña')),
                ('estadoPaquete', models.BooleanField(default=True, verbose_name='Activo')),
            ],
            options={
                'verbose_name': 'Paquete',
                'verbose_name_plural': 'Paquetes',
            },
        ),
        migrations.CreateModel(
            name='Reservacion',
            fields=[
                ('idReservacion', models.AutoField(help_text='ID único para esta Reservacion', primary_key=True, serialize=False)),
                ('fechaRegistroReservacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Registro')),
                ('fechaEntradaReservacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Entrada ')),
                ('fechaSalidaReservacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Salida')),
                ('pension', models.IntegerField(help_text='Cantidad de Dinero en Soles', verbose_name='Pension')),
                ('estadoVuelo', models.BooleanField(default=True, verbose_name='Activo')),
                ('hotel_reservacion', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Reservacion.Hotel')),
            ],
            options={
                'ordering': ['idReservacion'],
            },
        ),
        migrations.CreateModel(
            name='TipoUsuario',
            fields=[
                ('idTipoUsuario', models.AutoField(help_text='ID único para esta Tipo de Usuario', primary_key=True, serialize=False)),
                ('nombreTipoUsuario', models.CharField(max_length=100, verbose_name='Nombre')),
                ('fechaCreacionTipoUsuario', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creacion')),
                ('estadoTipoUsuario', models.BooleanField(default=True, verbose_name='Activo')),
            ],
        ),
        migrations.CreateModel(
            name='Vuelo',
            fields=[
                ('idVuelo', models.AutoField(help_text='ID único para Vuelo', primary_key=True, serialize=False)),
                ('origenVuelo', models.TextField(max_length=500, verbose_name='Origen')),
                ('destinoVuelo', models.TextField(max_length=500, verbose_name='Destino')),
                ('fechaVuelo', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Vuelo')),
                ('estadoVuelo', models.BooleanField(default=True, verbose_name='Activo')),
            ],
            options={
                'ordering': ['idVuelo'],
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('imagenUsuario', models.ImageField(blank=True, null=True, upload_to='img/users/', verbose_name='Imagen de Perfil')),
                ('DNIUsuario', models.CharField(max_length=20, verbose_name='Doc. Identidad')),
                ('telefonoUsuario', models.CharField(help_text='No incluya Parentesis, ni guiones ni espacios', max_length=20, verbose_name='Telefono')),
                ('paqueteID', models.PositiveIntegerField(blank=True, default=1, null=True, verbose_name='Imagen de Perfil')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='VueloTurista',
            fields=[
                ('idVueloTurista', models.AutoField(help_text='ID único para Vuelo Turista', primary_key=True, serialize=False)),
                ('descripcion_vueloTurista', models.TextField(max_length=500, verbose_name='Descripcion de Vuelo')),
                ('estadoVueloTurista', models.BooleanField(default=True, verbose_name='Activo')),
                ('vuelo_vueloTurista', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Reservacion.Vuelo')),
            ],
            options={
                'ordering': ['idVueloTurista'],
            },
        ),
        migrations.CreateModel(
            name='ViajeContratado',
            fields=[
                ('idViajeContratado', models.AutoField(help_text='ID único para Viaje contratado', primary_key=True, serialize=False)),
                ('estadoViajeContratado', models.BooleanField(default=True, verbose_name='Activo')),
                ('reservacion_viajeContratado', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Reservacion.Reservacion')),
                ('usuario_viajeContratado', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('vueloTurista_vueloContratado', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Reservacion.VueloTurista')),
            ],
            options={
                'ordering': ['idViajeContratado'],
            },
        ),
        migrations.CreateModel(
            name='DetallePaquete',
            fields=[
                ('idDetallePaquete', models.AutoField(help_text='ID único para este Paquete', primary_key=True, serialize=False)),
                ('tituloDetallePaquete', models.CharField(blank=True, max_length=250, null=True, verbose_name='titulo del paquete')),
                ('nroDiaPaquete', models.PositiveSmallIntegerField(default=1, null=True, verbose_name='Numero de Dia')),
                ('descripcionDetallePaquete', models.TextField(blank=True, max_length=2000, null=True, verbose_name='Descripcion')),
                ('imagenDetallePaquete', models.ImageField(blank=True, null=True, upload_to='img/detallePaquete/', verbose_name='Imagen')),
                ('estadoDetallePaquete', models.BooleanField(default=True, verbose_name='Es Activo')),
                ('paquete_detallePaquete', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Reservacion.Paquete')),
            ],
        ),
        migrations.CreateModel(
            name='Condicion',
            fields=[
                ('idCondicionPaquete', models.AutoField(help_text='ID unico', primary_key=True, serialize=False, verbose_name='ID CONDICION PAQUETE')),
                ('descripcionCondicionPaquete', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Descripcion de la condicion')),
                ('estadoCondicionPaquete', models.BooleanField(default=True, verbose_name='Es Activo')),
                ('paquete_condicion', models.ManyToManyField(to='Reservacion.Paquete', verbose_name='Tags')),
            ],
            options={
                'verbose_name': 'CondicionPaquete',
                'verbose_name_plural': 'CondicionPaquetes',
            },
        ),
        migrations.CreateModel(
            name='AlbumImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='albums/images/')),
                ('album', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='images', to='Reservacion.Album')),
            ],
        ),
        migrations.AddField(
            model_name='album',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
